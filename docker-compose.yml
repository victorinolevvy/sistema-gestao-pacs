version: "3.8"

services:
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - pacs-network

  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    ports:
      - "3002:3001"
    depends_on:
      - postgres
      - redis
    # Explicitly load the .env file
    env_file:
      - .env
    # Use variables from the .env file
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      NODE_ENV: ${NODE_ENV}
    networks:
      - pacs-network
    volumes:
      - ./backend:/app
      - /app/node_modules

  postgres:
    image: postgres:16
    container_name: pacs-postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5436:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d # Mount init scripts
    networks:
      - pacs-network

  redis:
    image: redis:7-alpine
    container_name: pacs-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pacs-network

networks:
  pacs-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
